import { ignoreCaseSolution, ignoreCaseSolutionWithGenData } from '../data'
import { randomIntBetween } from '../helper/random-int-between'
import { StoryData } from '../types'

interface DATA {
  tina: number
  teo: number
}

export const story28: StoryData<DATA> = {
  title: 'Taschengeld',
  x: 74,
  y: 586,
  deps: [41],
  generator: () => {
    const teo = randomIntBetween(5, 15)
    return {
      tina: teo + randomIntBetween(2, 10),
      teo,
    }
  },
  render: ({ data }) => {
    return (
      <>
        <p>
          Ich und Teo bekommen pro Monat zusammen {data.tina + data.teo}‚Ç¨
          Taschengeld. Meine Eltern wollen uns damit nicht
          &quot;verw√∂hnen&quot;, wir sollen bitte selbst kreativ werden und uns
          was zu arbeiten suchen, wenn wir mehr Geld brauchen. Anstrengend üò§
        </p>

        <p>
          Immerhin habe ich mit Teo ausmachen k√∂nnen, dass ich{' '}
          {data.tina - data.teo}‚Ç¨ mehr bekomme als er. Das ist trotzdem recht
          wenig, aber damit muss ich halt klar kommen.
        </p>

        <p>Wie viel Euro Taschengeld bekomme ich im Monat?</p>
      </>
    )
  },
  proof: ({ data }) => {
    return (
      <>
        <p>
          Von den {data.tina + data.teo}‚Ç¨ wei√üt du, dass Tina davon{' '}
          {data.tina - data.teo}‚Ç¨ bekommt. Die restlichen {data.teo * 2}‚Ç¨ werden
          gleichm√§√üig auf Tina und Teo aufgeteilt, also f√ºr beide je {data.teo}
          ‚Ç¨. Damit bekommt Tina <strong>{data.tina}‚Ç¨ im Monat</strong>, Teo
          bekommt {data.teo}‚Ç¨ im Monat. Die Probe geht auf.
        </p>
        <p>
          Man k√∂nnte hier auch die Gleichung x + (x - {data.tina - data.teo}) ={' '}
          {data.tina + data.teo} aufstellen und das formal l√∂sen. Wenn dir
          dieser Weg leichter f√§llt, ist das sehr legit. Aber manchmal gef√§llt
          es mir auch, mal nicht mit Formeln zu arbeiten.
        </p>
      </>
    )
  },
  submit: ignoreCaseSolutionWithGenData<DATA>((data) => [
    `${data.tina}`,
    `${data.tina}‚Ç¨`,
    `${data.tina}euro`,
  ]),
}
